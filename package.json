{
  "name": "localcast-weather",
  "version": "0.0.1",
  "license": "MIT",
  "config": {
    "imageRepo": "jadirjunior/localcast-weather",
    "imageName": "localcast-weather",
    "imagePort": "8080",
    "internalContainerPort": "3000"
  },
  "scripts": {
    "ng": "ng",
    "style": "import-sort -l '**/{src,tests,e2e}/**/*.ts' && prettier --check '**/{src,tests,e2e}/**/*.{*.css,ts}'",
    "style:fix": "import-sort --write '**/{src,tests,e2e}/**/*.ts' && prettier --write '**/{src,tests,e2e}/**/*.{*css,ts}' && js-beautify '**/src/**/*.html'",
    "start": "ng serve --open",
    "build": "ng build",
    "watch": "ng build --watch --configuration development",
    "serve:dist": "http-server ./dist/local-weather-app -a localhost -p 4200 -c-1",
    "test": "ng test --browsers Chrome",
    "test:prod": "npm test -- --browsers ChromiumNoSandbox --watch=false --code-coverage",
    "test:debug": "ng test -- --source-map",
    "test:coverage": "ng test --browsers ChromiumNoSandbox --watch=false --code-coverage",
    "test:ci": "ng test --browsers ChromeHeadless --code-coverage --watch=false",
    "test:pre-push": "ng test --browsers ChromeHeadless --code-coverage --watch=false",
    "coverage": "http-server -c-1 -o -p 9875 ./coverage",
    "lint": "ng lint --max-warnings 0",
    "lint:staged": "eslint src --max-warnings=0",
    "e2e": "ng e2e",
    "pre-commit": "lint-staged",
    "pre-push": "npm run test:pre-push",
    "cypress:open": "concurrently 'npm start' 'cypress open'",
    "cypress:run": "npm run build && concurrently 'npm run serve:dist' 'cypress run'",
    "test:a11y": "pa11y --standard WCAG2A http://localhost:4200",
    "prenow:publish": "npm run build",
    "now:publish": "now --platform-version 2 dist/local-weather-app",
    "predocker:build": "npm run build && npm run test:ci",
    "docker:build": "cross-conf-env docker image build . -t $npm_package_config_imageRepo:$npm_package_version",
    "postdocker:build": "npm run docker:tag",
    "docker:tag": "cross-conf-env docker image tag $npm_package_config_imageRepo:$npm_package_version $npm_package_config_imageRepo:latest",
    "docker:stop": "cross-conf-env docker stop $npm_package_config_imageName || true",
    "docker:run": "run-s -c docker:stop docker:runHelper",
    "docker:runHelper": "cross-conf-env docker run -e NODE_ENV=local --rm --name $npm_package_config_imageName -d -p $npm_package_config_imagePort:$npm_package_config_internalContainerPort $npm_package_config_imageRepo",
    "predocker:publish": "echo Attention! Ensure `docker login` is correct.",
    "docker:publish": "cross-conf-env docker image push $npm_package_config_imageRepo:$npm_package_version",
    "postdocker:publish": "cross-conf-env docker image push $npm_package_config_imageRepo:latest",
    "docker:taillogs": "cross-conf-env docker logs -f $npm_package_config_imageName",
    "docker:open": "sleep 2 && cross-conf-env open-cli http://localhost:$npm_package_config_imagePort",
    "predocker:debug": "run-s docker:build docker:run",
    "docker:debug": "run-s -cs docker:build docker:run docker:open docker:debugmessage docker:taillogs",
    "docker:debugmessage": "echo Docker Debug Completed Successfully! Hit Ctrl+C to terminate log tailing.",
    "build:integration": "cross-conf-env docker image build -f integration.Dockerfile . -t $npm_package_config_imageRepo:latest",
    "gcould:build": "gcloud builds submit --tag gcr.io/mj-localcast-weather/mj-localcast-weather --project mj-localcast-weather",
    "gcloud:deploy": "gcloud run deploy --image gcr.io/mj-localcast-weather/mj-localcast-weather --platform managed --project mj-localcast-weather --region us-east1"
  },
  "dependencies": {
    "@angular/animations": "^13.1.2",
    "@angular/cdk": "^13.1.3",
    "@angular/common": "^13.1.2",
    "@angular/compiler": "^13.1.2",
    "@angular/core": "^13.1.3",
    "@angular/flex-layout": "13.0.0-beta.38",
    "@angular/forms": "^13.1.2",
    "@angular/material": "^13.1.2",
    "@angular/platform-browser": "^13.1.2",
    "@angular/platform-browser-dynamic": "^13.1.2",
    "@angular/router": "^13.1.2",
    "@ngrx/effects": "^13.1.0",
    "@ngrx/store": "^13.1.0",
    "rxjs": "~7.5.2",
    "subsink": "^1.0.2",
    "tslib": "^2.3.1",
    "zone.js": "~0.11.4"
  },
  "devDependencies": {
    "@angular-devkit/architect": "^0.1502.0",
    "@angular-devkit/build-angular": "~13.1.3",
    "@angular-eslint/builder": "13.0.1",
    "@angular-eslint/eslint-plugin": "13.0.1",
    "@angular-eslint/eslint-plugin-template": "13.0.1",
    "@angular-eslint/schematics": "13.0.1",
    "@angular-eslint/template-parser": "13.0.1",
    "@angular/cli": "~13.1.4",
    "@angular/compiler-cli": "^13.1.2",
    "@cypress/schematic": "^1.6.0",
    "@ngrx/schematics": "^13.1.0",
    "@types/jasmine": "~3.10.3",
    "@types/node": "^12.20.42",
    "@typescript-eslint/eslint-plugin": "5.10.2",
    "@typescript-eslint/parser": "5.10.2",
    "angular-unit-test-helper": "^12.0.0",
    "concurrently": "^7.0.0",
    "cross-conf-env": "^1.2.1",
    "cypress": "latest",
    "dev-norms": "1.7.1",
    "eslint": "^8.8.0",
    "eslint-config-prettier": "^8.3.0",
    "eslint-plugin-ngrx": "^2.0.0",
    "eslint-plugin-prettier": "^4.0.0",
    "http-server": "^14.1.0",
    "husky": "^7.0.4",
    "import-sort": "^6.0.0",
    "import-sort-cli": "^6.0.0",
    "import-sort-parser-typescript": "^6.0.0",
    "jasmine-core": "~4.0.0",
    "js-beautify": "^1.14.0",
    "karma": "~6.3.13",
    "karma-chrome-launcher": "~3.1.0",
    "karma-coverage": "~2.1.0",
    "karma-jasmine": "~4.0.1",
    "karma-jasmine-html-reporter": "~1.7.0",
    "lint-staged": "^12.3.3",
    "ng-tester": "^9.0.0",
    "npm-run-all": "^4.1.5",
    "open-cli": "^7.0.1",
    "pa11y": "^6.1.1",
    "pa11y-ci": "^3.0.1",
    "prettier": "^2.5.1",
    "typescript": "^4.5.5",
    "typescript-eslint": "0.0.1-alpha.0"
  },
  "importSort": {
    ".ts, .tsx": {
      "parser": "typescript",
      "style": "eslint",
      "options": {}
    }
  },
  "lint-staged": {
    "src/**/*.{ts,css,html}": [
      "prettier --check",
      "eslint --max-warnings=0"
    ],
    "src/**/*.ts": [
      "import-sort -l"
    ]
  }
}
